### Observatory db server (sample metadata, sites)
# 35.185.117.147
observatoryDbServerHost: 35.185.117.147
observatoryDbServerPort: 5432
observatoryDbServerSSL: require
observatoryDbServerDatabase: observatory_dev2
observatoryDbServerDbSchema: observatory
observatoryDbServerUser: USER
observatoryDbServerPass: PASS
observatoryDbStudiesView: studies_view
observatoryDbStudyField: study_id
observatoryDbViews: ['regions_view', 'countries_view', 'sites_view', 'features_view', 'samples_view', 'featuretypes_view', 'drug_regions_view']
panoptesObsTables: ['pf_regions', 'countries', 'pf_sites', 'pf_features', 'pf_samples', 'pf_featuretypes', 'pf_drug_regions']

### Alfresco server (studies, publications)
alfrescoStudiesURL: https://alfresco.malariagen.net/alfresco/service/cggh/collaborations
alfrescoUserId: USER
alfrescoUserPass: PASS
alfrescoStudiesFields: ['study_number', 'webTitle', 'description']
alfrescoStudyField: study_number
alfrescoStudyPublicationsFields: ['doi', 'name', 'title', 'citation', 'pmid']
panoptesAlfStudiesTable: studies
panoptesAlfStudyPublicationsTable: study_publications

### LDAP server (people)
ldapServerURL: ldaps://sso1.malariagen.net:636
ldapUserDN: cn=website,ou=users,ou=system,dc=malariagen,dc=net
ldapUserPass: PASS
ldapPeopleBaseDN: ou=people,dc=malariagen,dc=net
ldapPeopleFilterString: (objectClass=OpenLDAPperson)
ldapPeopleFields: ['mail', 'jobTitle1', 'givenName', 'sn', 'jobTitle1', 'o1', 'jobTitle2', 'o2', 'jobTitle3', 'o3', 'oProfile1', 'oProfile2', 'oProfile3', 'linkedInURL', 'twitterURL', 'researchGateURL', 'scholarURL', 'ORCID', 'malariagenUID', 'uid']

### Cross-server relations
panoptesAlfStudyLdapPeopleTable: study_ldap_people
panoptesAlfStudyLdapPeopleGroups: ['Contact', 'Public']
panoptesAlfStudyLdapPeopleFields: ['jobTitle1', 'jobTitle2', 'jobTitle3', 'uid', 'researchGateURL', 'scholarURL', 'twitterURL', 'malariagenUID', 'oProfile1', 'oProfile2', 'oProfile3', 'ORCID', 'sn', 'mail', 'givenName', 'o1', 'o2', 'o3']

### Post-fetch processing
panoptesObsRegionsTable: pf_regions
panoptesObsSamplesTable: pf_samples
panoptesObsCountriesTable: countries
panoptesObsSamplesTableRegionField: region_id
panoptesObsSamplesTableStudyField: study_id
panoptesObsSamplesTableCountryField: country_id
panoptesObsSamplesTableLatField: site_lat
panoptesObsSamplesTableLngField: site_lng
panoptesObsCountriesTableCountryField: country_id
panoptesObsCountriesTableGeoJsonField: geojson
panoptesObsRegionsTableGeoJsonField: geojson
panoptesObsRegionsTableRegionField: region_id
panoptesObsRegionsAdditionalCountries:
  WAF: ['SN', 'EH', 'GW', 'SL', 'LR', 'TG', 'NE']
  EAF: ['SO', 'DJ']
  SAM: ['EC', 'VE', 'GY', 'BR', 'SR', 'GF', 'BO']


### Google Sheets (drugs, genes)
gsheetsApiDiscoveryUrl: https://sheets.googleapis.com/$discovery/rest?version=v4
gsheetsApiServiceName: sheets
gsheetsApiServiceVersion: v4
gsheetsAuthHost: localhost
gsheetsAuthPort: 8888
# The following "client_secret" JSON file can be downloaded from https://console.cloud.google.com/apis/credentials?project=ssdtest-141111
gsheetsClientSecretPath: PATH
# The following credentials JSON file will be stored by the the malobs.py script.
gsheetsCredentialsPath: PATH
gsheetsIds: ['1YWX-Ah0tkQsbpORDEX7aGoaoarwxdAGzNOVxlFBtoEE', '1YWX-Ah0tkQsbpORDEX7aGoaoarwxdAGzNOVxlFBtoEE', '1YWX-Ah0tkQsbpORDEX7aGoaoarwxdAGzNOVxlFBtoEE', '1YWX-Ah0tkQsbpORDEX7aGoaoarwxdAGzNOVxlFBtoEE']
gsheetsRanges: ['Drugs!A1:Z', 'Genes!A1:Z', 'DrugRegion!A1:B', 'DrugGene!A1:Z',]
panoptesGsheetsTables: ['pf_drugs', 'pf_resgenes', 'pf_drug_regions', 'pf_drug_gene']
# The following credentials JSON file will be stored by the the malobs.py script.
